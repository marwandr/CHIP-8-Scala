[0m[[0m[0mdebug[0m] [0m[0m> Exec(run roms/3-corax+.ch8, Some(a4ff99b8-1f99-4d7a-bf28-72a2869aeddc), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / run[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 2 Scala sources to /home/marwandr/Uni/chip8/target/scala-2.12/classes ...[0m
[0m[[0m[31merror[0m] [0m[0m/home/marwandr/Uni/chip8/chip8.scala:386:16: Cannot find an implicit ExecutionContext. You might pass[0m
[0m[[0m[31merror[0m] [0m[0man (implicit ec: ExecutionContext) parameter to your method.[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mThe ExecutionContext is used to configure how and on which[0m
[0m[[0m[31merror[0m] [0m[0mthread pools Futures will run, so the specific ExecutionContext[0m
[0m[[0m[31merror[0m] [0m[0mthat is selected is important.[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mIf your application does not define an ExecutionContext elsewhere,[0m
[0m[[0m[31merror[0m] [0m[0mconsider using Scala's global ExecutionContext by defining[0m
[0m[[0m[31merror[0m] [0m[0mthe following:[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mimplicit val ec: scala.concurrent.ExecutionContext = scala.concurrent.ExecutionContext.global[0m
[0m[[0m[31merror[0m] [0m[0m        Future {[0m
[0m[[0m[31merror[0m] [0m[0m               ^[0m
[0m[[0m[31merror[0m] [0m[0mone error found[0m
[0m[[0m[31merror[0m] [0m[0m(Compile / [31mcompileIncremental[0m) Compilation failed[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 2 s, completed Oct 24, 2024, 4:37:19â€¯AM[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
